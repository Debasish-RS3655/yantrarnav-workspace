#!/usr/bin/env python3
import rclpy
from rclpy.node import Node
from nav_msgs.msg import Odometry
from mavros_msgs.srv import CommandHome

class HomeSetter(Node):
    def __init__(self):
        super().__init__('home_setter')
        self.subscription = self.create_subscription(
            Odometry,
            '/rtabmap/odom',
            self.odom_callback,
            10)
        self.odom_received = False
        self.cli = self.create_client(CommandHome, '/mavros/cmd/set_home')
        while not self.cli.wait_for_service(timeout_sec=1.0):
            self.get_logger().info('Waiting for /mavros/cmd/set_home service...')

    def odom_callback(self, msg):
        if not self.odom_received:
            self.odom_received = True
            self.get_logger().info('Odometry received, setting home position')
            self.set_home()

    def set_home(self):
        req = CommandHome.Request()
        req.current_gps = False
        req.latitude = 0.0
        req.longitude = 0.0
        req.altitude = 0.0
        future = self.cli.call_async(req)
        future.add_done_callback(self.service_callback)

    def service_callback(self, future):
        try:
            response = future.result()
            if response.success:
                self.get_logger().info('Home position set successfully')
            else:
                self.get_logger().error(f'Failed to set home, result: {response.result}')
        except Exception as e:
            self.get_logger().error(f'Service call failed: {e}')

def main(args=None):
    rclpy.init(args=args)
    node = HomeSetter()
    rclpy.spin(node)
    node.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
chmod: cannot access '/home/nits/ros2_ws/src/drone_vio_py/drone_vio_py/Set_Home_Position.py': No such file or directory
